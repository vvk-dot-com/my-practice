import React, { useState, useEffect } from 'react';
import './WeatherForecast.css';

const WeatherForecast = () => {
  const [city, setCity] = useState('London');
  const [forecast, setForecast] = useState(null);
  const apiKey = '2c2995961e879ea7fe8d67371fa19ced';

  const handleSubmit = e => {
    e.preventDefault();
    const newCity = e.target.elements.city.value;
    setCity(newCity);
  };

  useEffect(() => {
    if (city) {
      const apiUrl = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`;
      fetch(apiUrl)
        .then(response => response.json())
        .then(data => setForecast(data));
    }
  }, [apiKey, city]);

  return (
    <div className="weather-forecast-container">
      {!forecast && (
        <div className="weather-search-container">
          
          <form onSubmit={handleSubmit}>
            <input type="text" name="city" placeholder="Enter a city name" />
            <button type="submit">Search</button>
          </form>
        </div>
      )}

        {forecast && (
         <div className="weather-data-container">
            <form onSubmit={handleSubmit}>
                <input type="text" name="city" className='input'  placeholder="Enter a city name" />
                <button type="submit" className='search'>Search</button>
                <h2 className='heading'>Weather {city}</h2>
            </form>
                
                <div className="weather-items-container">
                { 
                forecast.list.filter(item => item.dt_txt.includes('12:00:00')).map((item, index) => {
                    const date = new Date(item.dt_txt);
                    const weekday = date.toLocaleDateString('en-US', { weekday: 'long' });
                    const day = date.getDate();
                    const month = date.toLocaleDateString('en-US', { month: 'long' });

                    const iconUrl = `http://openweathermap.org/img/w/${item.weather[0].icon}.png`;
                    
                    return (
                        <div key={index} className="weather-item">
                        <h4 className='date'>{weekday}, {month} {day}</h4>
                        <p className='a'> {item.weather[0].description} <img src={iconUrl} alt={item.weather[0].description} /> </p>
                        <p className='b'>Temperature: {item.main.temp}°C</p>
                        <p className='b'>Humidity: {item.main.humidity}%</p>
                        <p className='b'>Wind Speed: {item.wind.speed} m/s</p>
                        </div>
                    );
                })}
                </div>
          </div>
        )}
    </div>

  );
};

export default WeatherForecast;
==============================================================================================================================================================================================================================================================

// import React, { useState, useEffect } from "react";

// const API_KEY = "your_api_key_here";

// const WeatherForecast = () => {
//   const [city, setCity] = useState("New York");
//   const [forecast, setForecast] = useState([]);
//   const [isLoading, setIsLoading] = useState(false);

//   const handleSubmit = (e) => {
//     e.preventDefault();
//     setIsLoading(true);
//     fetchWeatherForecast();
//   };

//   const fetchWeatherForecast = () => {
//     fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${API_KEY}&units=metric`)
//       .then((response) => response.json())
//       .then((data) => {
//         setForecast(data.list);
//         setIsLoading(false);
//       })
//       .catch((error) => console.log(error));
//   };

//   useEffect(() => {
//     fetchWeatherForecast();
//   }, []);

//   const getCurrentTime = () => {
//     const now = new Date();
//     const hours = now.getHours();
//     const minutes = now.getMinutes();
//     const seconds = now.getSeconds();
//     return `${hours}:${minutes}:${seconds}`;
//   };

//   const generateDates = () => {
//     const dates = [];
//     for (let i = 0; i <= 4; i++) {
//       const date = new Date();
//       date.setDate(date.getDate() + i);
//       dates.push(date.toDateString());
//     }
//     return dates;
//   };

//   const getCurrentForecast = () => {
//     const currentTime = new Date().getTime();
//     const currentForecast = forecast.filter((item) => {
//       const itemTime = new Date(item.dt_txt).getTime();
//       return Math.abs(itemTime - currentTime) < 10800000; // 3 hours in milliseconds
//     });
//     return currentForecast;
//   };

//   return (
//     <div>
//       <h2>5-Day Weather Forecast for {city}</h2>
//       <form onSubmit={handleSubmit}>
//         <label htmlFor="city">Enter city name:</label>
//         <input type="text" id="city" name="city" value={city} onChange={(e) => setCity(e.target.value)} />
//         <button type="submit">Get Forecast</button>
//       </form>
//       {isLoading ? (
//         <p>Please wait...</p>
//       ) : (
//         <ul>
//           {getCurrentForecast().map((item) => {
//             const date = new Date(item.dt_txt);
//             return (
//               <li key={item.dt}>
//                 <p>Date: {date.toDateString()}</p>
//                 <p>Time: {date.toLocaleTimeString()}</p>
//                 <p>Temperature: {item.main.temp} °C</p>
//                 <p>Description: {item.weather[0].description}</p>
//               </li>
//             );
//           })}
//         </ul>
//       )}
//     </div>
//   );
// };

// export default WeatherForecast;
